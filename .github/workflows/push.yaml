name: Publish

on:
  push:
    tags:
    - 'v*.*.*'
    branches:
    - main

jobs:
  test:
    name: Test
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
  publish-docker:
    name: Build and Push fastapi container
    needs: test
    runs-on: ubuntu-20.04
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        # list of Docker images to use as base name for tags
        images: |
          ghcr.io/pluralsh/plrl-cd-test
        # generate Docker tags based on the following events/attributes
        tags: |
          type=sha
          type=ref,event=pr
          type=ref,event=branch
          type=semver,pattern={{version}}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: "."
        file: "./Dockerfile"
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          GIT_COMMIT=${{ github.sha }}
  update-service:
    needs: [publish-docker]
    runs-on: ubuntu-20.04
    env:
      PLURAL_CONSOLE_TOKEN: ${{ secrets.CONSOLE_TOKEN }}
      PLURAL_CONSOLE_URL: ${{ secrets.CONSOLE_URL }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: installing plural
      uses: pluralsh/setup-plural@v0.2.0
    - name: Update service
      run:  plural cd services update @cd-demo-workload-1/cd-test --conf tag=sha-${GITHUB_SHA::7}